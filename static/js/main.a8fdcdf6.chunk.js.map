{"version":3,"sources":["components/Navbar/Navbar.tsx","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","isActive","to","HomePage","PageNotFound","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","classNames","sex","name","PeopleTable","people","selectedSlug","map","born","died","fatherName","motherName","mother","father","renderCellContent","parentName","parent","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useEffect","fetchPeople","peopleData","peopleWithParents","find","useParams","length","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a8fdcdf6.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => `navbar-item ${isActive ? 'has-background-grey-lighter' : ''}`}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => `navbar-item ${isActive ? 'has-background-grey-lighter' : ''}`}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype PersonLinkProps = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype PeopleTableProps = {\n  people: Person[];\n  selectedSlug?: string;\n};\n\nexport const PeopleTable: React.FC<PeopleTableProps> = (\n  { people, selectedSlug },\n) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => {\n        const {\n          sex,\n          born,\n          died,\n          fatherName,\n          motherName,\n          slug,\n          mother,\n          father,\n        } = person;\n\n        function renderCellContent(\n          parentName: string | null,\n          parent: Person | undefined,\n        ) {\n          if (!parentName) {\n            return '-';\n          }\n\n          if (parent) {\n            return <PersonLink person={parent} />;\n          }\n\n          return parentName;\n        }\n\n        return (\n          <tr\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': slug === selectedSlug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{sex}</td>\n            <td>{born}</td>\n            <td>{died}</td>\n            <td>{renderCellContent(motherName, mother)}</td>\n            <td>{renderCellContent(fatherName, father)}</td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setIsLoading(true);\n      setError(false);\n\n      try {\n        const peopleData = await getPeople();\n\n        const peopleWithParents = peopleData.map(person => ({\n          ...person,\n          mother: peopleData.find(\n            ({ name }) => name === person.motherName,\n          ),\n          father: peopleData.find(\n            ({ name }) => name === person.fatherName,\n          ),\n        }));\n\n        setPeople(peopleWithParents);\n      } catch {\n        setError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchPeople();\n  }, []);\n\n  const { selectedSlug } = useParams<{ selectedSlug?: string }>();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : <PeopleTable people={people} selectedSlug={selectedSlug} />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && isLoading === false && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />} />\n          <Route path=\"people/:selectedSlug\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}